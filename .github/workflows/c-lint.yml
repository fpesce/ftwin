name: C Project Linting & Static Analysis

on:
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  cppcheck:
    name: Cppcheck Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Run Cppcheck Action
        uses: deep5050/cppcheck-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force_language: c
          std: c11
          platform: unix64
          enable: all
          inconclusive: enable
          # Optional: Add other options like 'exclude_check' or 'suppress'
          exclude_check: './third-party/,./bugfixes/'
          other_options: --suppressions-list=.cppcheck-suppressions

  clang-tidy:
    name: Clang-Tidy Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Setup third-party dependencies
        run: ./setup.sh

      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pkg-config \
            automake \
            autoconf-archive \
            patch \
            libtool \
            xsltproc \
            libapr1-dev \
            libaprutil1-dev \
            libpcre3-dev \
            libjansson-dev \
            check \
            lcov \
            doxygen \
            graphviz \
            libgd-dev \
            liblzma-dev \
            liblz4-dev \
            libzstd-dev \
            libxml2-dev \
            libbz2-dev \
            zlib1g-dev \
            clang-tidy \
            bear

      - name: Generate Compilation Database
        run: |
          autoreconf -isf
          cd third-party/libpuzzle
          ./autogen.sh
          ./configure
          cd ../libarchive
          ./build/autogen.sh
          ./configure --without-openssl --without-nettle
          cd ../..
          ./configure
          bear -- make -j check

      - name: Run Clang-Tidy Action
        uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repo-root: '.' # The compilation database is at the root
          style: '' # Disable clang-format
          tidy-checks: '' # Use .clang-tidy file from repo
          thread-comments: 'update'
          file-annotations: true

      - name: Report Linting Failure
        if: steps.linter.outputs.checks-failed > 0
        run: |
          echo "::error::Clang-Tidy detected issues. Please review the annotations and PR comment."
          exit 1
